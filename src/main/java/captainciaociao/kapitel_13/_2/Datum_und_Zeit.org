#+title: Datum und Zeit
* DONE Datumsausgabe in verschiedene Sprachen formatieren
** Aufgabe
+ Erzeuge ein ~LocalDate~-Objekt für den 19. September:
#+name: Date
#+begin_src java :results output :noeval
LocalDate now=LocalDate.of(Year.now().getValue(),Month.SEPTEMBER,19);
#+end_src
+ Rufe die ~toString()~-Methode auf. Wie ist die Ausgabe?
+ Rufe ~format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM))~ auf dem ~LocalDate~ auf.
+ Es gibt insgesamt vier ~FormatStyle~-Stile probiere alle aus. Welches Muster wird verwendet?
+ Auf dem ~DateTimeFormatter~-Objekt kann man ~withLocale(Locale)~ aufrufen und die Sprache ändern. Probiere das für verschiedene Sprachen aus.
* DONE An welchem Tag feiert Sir Francis Beaufort dieses Jahr Geburtstag?
Captain CiaoCiao feiert jedes Jahr den Geburtstag von Sir Francis Beaufort, der am 27.Mai 1774 geboren wurde.
** Aufgabe
+ Gegeben ist ein ~LocalDate~ mit Fraancis' Geburtstag:
#+name: Birthday
#+begin_src java :results output noeval
LocalDate beaufortBday = LocalDate.of(1774, Month.MAY,27);
#+end_src
+ Entwickle ausgehend von ~beaufortBday~ ein neues ~LocaleDate~-Objekt, mit dem aktuellen Jahr, wobei das jetzige Jahr nicht hart ein-kodiert ist, sondern dynamisch von dem System stammen soll.
+ Erzeuge eine Ausgabe, an welchem Wochentag in diesem Jahr Francis Geburtstag feiert. In welcher Form der Wochentag ausgegeben wird, also Zahl oder String oder welcher Sprache, ist egal.
** Beispiel
Für das Jahr 2020 könnte die Ausgabe wie folgt aussehen:
#+begin_example
WEDNESDAY
3
Mittwoch
#+end_example
* DONE Durchschnittliche Dauer der Karaoke-Nächte ermitteln.
Schreibe relevante Daten auf ein Notizblock auf die Einträge können wie folgt aussehen:
»2022-03-12,20:20-2022-03-12,23:50«
** Aufgabe
+ schreibe ein Programm, das einen String im oberen Format auswertet und die durchschnittliche Party-Dauer ermittelt und ausgibt.
+ Bei dem Programm müssen keine Zeitzonen, Schaltsekunden oder sonstige Sonderfälle berücksichtigt werden - ein Tag kann exakt 24 Stunden lang sein.
** Beispiel
Für den String:
=2022-03-12, 20:20 - 2022-03-12, 23:50=
=2022-04-01, 21:30 - 2022-04-02, 01:20=
soll die Ausgabe so aussehen:
=3 h 40 m=
** Tipp
Bei Zeitdifferenz hilft die Klasse ~Duration~.
* TODO Verschiedene Datumsformate parsen
Ein Datum kann absolut oder relativ spezifiziert werden, und es gibt mehrere Möglichkeiten zur Datumsausgabe. Ein paar Bespiele:
#+begin_example
2020-10-10
2020-12-2
1/3/1976
1/3/2020
tomorrow
today
yesterday
1 day ago
2234 days ago
#+end_example
** Aufgabe
+ Schreibe eine Methode ~Optional<LocalDate> parseDate(String string)~, welche die oben genannten Formate erkennt
+ Wenn der string in einem der Formate vorliegt, soll die Methode  den String parsen, in ein ~LocalDate~ konvertieren und im ~Optional~ zurückgeben.
+ Konnte kein Format geparst werden, ist die Rückgabe ~Optional.empty()~.
